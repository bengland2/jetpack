---
# Obtain/Upload guest_images to OpenStack Cloud

- name: Fetch image
  get_url:
    url: "{{ guest_images[item].url }}"
    dest: "/home/stack/{{ guest_images[item].name }}.{{ guest_images[item].type }}"
  with_items: "{{ guest_images }}"

- name: Determine if image exists
  shell: . {{ overcloudrc }}; openstack image list | grep '{{ guest_images[item].name }}'
  register: image_exists
  ignore_errors: true
  changed_when: false
  with_items: "{{ guest_images }}"

- name: Remove image from dictionary of images if image exists
  set_fact:
    guest_images: "{{ guest_images|dict_remove_item(item[0]) }}"
  when: item[0] in item[1].stdout and
        item[1] is defined
  with_nested:
    - "{{ guest_images }}"
    - "{{ image_exists.results }}"

- debug:
    msg: "{{ guest_images }}"


- name: change the root password for qcow2 image
  shell: |
    virt-customize -a /home/stack/{{ guest_images[item].name }}.{{ guest_images[item].type }} --root-password password:"{{ vm_password }}"
  with_items: "{{ guest_images }}"

- name: Upload image into cloud 
  shell: . {{ overcloudrc }}; openstack image create --public --disk-format={{ guest_images[item].type }} --container-format=bare {{ guest_images[item].name }} < /home/stack/{{ guest_images[item].name }}.{{ guest_images[item].type }}
  ignore_errors: true
  with_items: "{{ guest_images }}"
